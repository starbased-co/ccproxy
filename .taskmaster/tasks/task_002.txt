# Task ID: 2
# Title: Design and Implement Configuration Loader
# Status: pending
# Dependencies: 1
# Priority: high
# Description: Implement a robust configuration loader supporting YAML and environment variable overrides for ccproxy settings.
# Details:
- Use PyYAML (>=6.0) to parse YAML config files.
- Support environment variable overrides (e.g., CCPROXY_CONTEXT_THRESHOLD).
- Validate config schema using pydantic (>=2.0) for type safety and error reporting.
- Ensure backward compatibility with original claude-code-router config fields where relevant.
- Document configuration options and expected structure.

# Test Strategy:
Unit test config loader with valid/invalid YAML, missing fields, and environment variable overrides. Ensure errors are descriptive.

# Subtasks:
## 1. Define Configuration Schema with Pydantic [pending]
### Dependencies: None
### Description: Design a Pydantic model representing all ccproxy configuration fields, ensuring type safety, validation, and backward compatibility with original claude-code-router config fields.
### Details:
Enumerate all required and optional configuration options, mapping them to Pydantic fields. Include legacy fields for backward compatibility and document any deprecated or renamed fields.

## 2. Implement YAML Configuration File Parsing [pending]
### Dependencies: 2.1
### Description: Use PyYAML (>=6.0) to load and parse YAML configuration files, converting them into Python dictionaries for further processing.
### Details:
Write a loader function that reads a YAML file, parses its contents, and returns a dictionary. Handle file not found, syntax errors, and empty files gracefully.

## 3. Support Environment Variable Overrides [pending]
### Dependencies: 2.2
### Description: Implement logic to override configuration values from the YAML file with environment variables (e.g., CCPROXY_CONTEXT_THRESHOLD), following a defined precedence order.
### Details:
Scan for environment variables matching config fields, convert their values to the correct types, and override the corresponding YAML values. Document the precedence and supported variable names.

## 4. Integrate Loader and Validate Final Configuration [pending]
### Dependencies: 2.3
### Description: Combine YAML parsing and environment variable overrides, then validate the resulting configuration using the Pydantic schema. Ensure errors are clear and actionable.
### Details:
Create a single entry point function that loads the YAML, applies overrides, and validates the result. Raise descriptive errors for missing or invalid fields.

## 5. Document Configuration Structure and Usage [pending]
### Dependencies: 2.4
### Description: Write comprehensive documentation covering all configuration options, expected YAML structure, environment variable overrides, and backward compatibility notes.
### Details:
Provide example YAML files, a table of environment variables, and migration guidance for users of the original claude-code-router config. Include troubleshooting tips for common errors.

